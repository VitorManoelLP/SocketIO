plugins {
    id 'java'
    id 'org.springframework.boot' version "${SpringVersion}"
    id 'io.spring.dependency-management' version '1.1.0'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.socketio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
    set('springCloudVersion', "2022.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    testImplementation 'org.assertj:assertj-core:3.24.1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${JunitPlatformVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${JunitPlatformVersion}")
    testImplementation 'org.junit.platform:junit-platform-suite-engine:1.8.2'
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.8.2")


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "standardOut", "started", "passed", "skipped", "failed"
    }
    filter {
        includeTestsMatching "com.socketio.socket.TestSuite*"
    }
}